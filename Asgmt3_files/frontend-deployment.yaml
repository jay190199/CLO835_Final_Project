apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  labels:
    app: webapp
spec:
  selector:
    matchLabels:
      app: webapp
  replicas: 1
  template:
    metadata:
      labels:
        app: webapp
    spec:
    serviceAccountName: clo835
      containers:
      - name: aws-cli
        image: amazon/aws-cli:latest
        command: ["/bin/sh","-c"]
        args:
        
        
         env:
          - name: DBHOST
            value: "mysql"
          - name: DBPORT
            value: "3306"
          - name: DBUSER
            value: "root"
          - name: DBPWD
            value: "pass1234"
          - name: DATABASE
            value: "employees"
          - name: APP_COLOR
            value: "blue"
        ports:
        - name: webapp
          containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: 200m
          requests:
            cpu: 200m
            
      - name: webapp-mysql
        image: <IMG_URI> #################
        volumeMounts:
        - name: db-secret-volume
          mountPath: "/opt/app-secret-volumes"
          readOnly: true
        - name: s3-image
          mountPath: /clo835/config/image_url
        envFrom:
          - secretRef:
              name: db-secret
        env:
        - name: IMAGE_URL_PATH
          valueFrom: 
            configMapKeyRef:
              name: webapp-config
              key: IMAGE_URL_PATH
        - name: IMAGE_URL_S3
          valueFrom: 
            configMapKeyRef:
              name: webapp-config
              key: IMAGE_URL_S3
        - name: GROUP
          valueFrom: 
            configMapKeyRef:
              name: webapp-config
              key:  GROUP
        ports:
        - containerPort: 81
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "cp /clo835/config/image_url/* static/"]
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 1000m
      volumes:
        - name: db-secret-volume
          secret:
            secretName: db-secret
        - name: s3-image
          emptyDir: {}
